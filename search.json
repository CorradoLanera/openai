[{"path":"https://irudnyts.github.io/openai/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 openai authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://irudnyts.github.io/openai/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Iegor Rudnytskyi. Author, maintainer.","code":""},{"path":"https://irudnyts.github.io/openai/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rudnytskyi (2022). openai: R Wrapper OpenAI API. https://github.com/irudnyts/openai, https://irudnyts.github.io/openai/.","code":"@Manual{,   title = {openai: R Wrapper for OpenAI API},   author = {Iegor Rudnytskyi},   year = {2022},   note = {https://github.com/irudnyts/openai, https://irudnyts.github.io/openai/}, }"},{"path":"https://irudnyts.github.io/openai/index.html","id":"openai","dir":"","previous_headings":"","what":"R Wrapper for OpenAI API","title":"R Wrapper for OpenAI API","text":"goal openai …","code":""},{"path":"https://irudnyts.github.io/openai/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Wrapper for OpenAI API","text":"can install development version openai GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"irudnyts/openai\")"},{"path":"https://irudnyts.github.io/openai/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"R Wrapper for OpenAI API","text":"Note: using GitHub/Gitlab, forget add .Renviron file .gitignore!","code":"Sys.setenv(     SPOTIFY_CLIENT_ID = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' ) usethis::edit_r_environ(scope = \"project\")"},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/cancel_fine_tune.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancel fine-tune — cancel_fine_tune","title":"Cancel fine-tune — cancel_fine_tune","text":"Immediately cancel fine-tune job. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/cancel_fine_tune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancel fine-tune — cancel_fine_tune","text":"","code":"cancel_fine_tune(   fine_tune_id,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/cancel_fine_tune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cancel fine-tune — cancel_fine_tune","text":"fine_tune_id required; length one character vector. ID fine-tune job. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/cancel_fine_tune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cancel fine-tune — cancel_fine_tune","text":"Returns list, elements contains information cancelled fine-tune.","code":""},{"path":"https://irudnyts.github.io/openai/reference/cancel_fine_tune.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cancel fine-tune — cancel_fine_tune","text":"Manage fine-tuning jobs tailor model specific training data. Related guide: Fine-tune models.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/cancel_fine_tune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancel fine-tune — cancel_fine_tune","text":"","code":"if (FALSE) { training_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" ) validation_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" )  training_info <- upload_file(training_file, \"fine-tune\") validation_info <- upload_file(validation_file, \"fine-tune\")  info <- create_fine_tune(     training_file = training_info$id,     validation_file = validation_info$id,     model = \"ada\",     compute_classification_metrics = TRUE,     classification_positive_class = \" baseball\" # Mind space in front )  id <- ifelse(     length(info$data$id) > 1,     info$data$id[length(info$data$id)],     info$data$id )  cancel_fine_tune(fine_tune_id = id) }"},{"path":"https://irudnyts.github.io/openai/reference/create_answer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create answer — create_answer","title":"Create answer — create_answer","text":"Note: endpoint deprecated removed December 3, 2022. Please see Answers Transition Guide details. Answers specified question using provided documents examples. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_answer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create answer — create_answer","text":"","code":"create_answer(   model = c(\"ada\", \"babbage\", \"curie\", \"davinci\"),   question,   examples,   examples_context,   documents = NULL,   file = NULL,   search_model = c(\"ada\", \"babbage\", \"curie\", \"davinci\"),   max_rerank = 200,   temperature = 0,   logprobs = NULL,   max_tokens = 16,   stop = NULL,   n = 1,   logit_bias = NULL,   return_metadata = FALSE,   return_prompt = FALSE,   expand = NULL,   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_answer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create answer — create_answer","text":"model required; defaults \"ada\"; length one character vector, one among \"ada\", \"babbage\", \"curie\", \"davinci\". ID engine use completion. question required; length one character vector. Question get answered. examples required; list. List (question, answer) pairs help steer model towards tone answer format like. recommend adding 2 3 examples. examples_context required; length one character vector. text snippet containing contextual information used generate answers examples provide. documents optional; defaults NULL; arbitrary length character vector. List documents answer input question derived. empty list, question answered based question-answer examples. specify either documents file, . file optional; defaults NULL; length one character vector. ID uploaded file contains documents search . See upload_file()() upload file desired format purpose. specify either documents file, . search_model required; defaults ada; length one character vector, one among \"ada\", \"babbage\", \"curie\", \"davinci\". ID engine use create_search()(). max_rerank required; defaults 200; length one numeric vector integer value greater 0. maximum number documents ranked create_search()() using file. Setting higher value leads improved accuracy increased latency cost. temperature required; defaults 0; length one numeric vector value 0 2. sampling temperature use. Higher values mean model take risks value 0 (argmax sampling) works better scenarios well-defined answer. logprobs optional; defaults NULL; length one numeric vector integer value 0 5. Include log probabilities logprobs likely tokens, well chosen tokens. example, logprobs 5, API return list 5 likely tokens. API always return logprob sampled token, may logprobs+1 elements response. maximum value logprobs 5. need , please contact support@openai.com describe use case. logprobs set, completion automatically added expand get logprobs. max_tokens required; defaults 16; length one numeric vector integer value greater 0. maximum number tokens allowed generated answer. stop optional; defaults NULL; character vector length one four. 4 sequences API stop generating tokens. returned text contain stop sequence. n required; defaults 1; length one numeric vector integer value greater 0. many answers generate question. logit_bias optional; defaults NULL; named list. Modify likelihood specified tokens appearing completion. Accepts list maps tokens (specified token ID GPT tokenizer) associated bias value -100 100. can use tokenizer tool (works GPT-2 GPT-3) convert text token IDs. Mathematically, bias added logits generated model prior sampling. exact effect vary per model, values -1 1 decrease increase likelihood selection; values like -100 100 result ban exclusive selection relevant token. example, can pass list(\"50256\" = -100) prevent <|endoftext|> token generated. return_metadata required; defaults FALSE; length one logical vector. special boolean flag showing metadata. set TRUE, document entry returned JSON contain \"metadata\" field. flag takes effect file set. return_prompt required; defaults FALSE; length one logical vector. set TRUE, returned JSON include \"prompt\" field containing final prompt used request completion. mainly useful debugging purposes. expand optional; defaults NULL; list elements among completion file. object name list, provide full information object; otherwise, provide object ID. Currently support completion file objects expansion. user optional; defaults NULL; length one character vector. unique identifier representing end-user, help OpenAI monitor detect abuse. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_answer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create answer — create_answer","text":"Returns list, elements contain answer supplementary information.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_answer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create answer — create_answer","text":"Given question, set documents, examples, API generates answer question based information set documents. useful question-answering applications sources truth, like company documentation knowledge base. Answers specified question using provided documents examples. endpoint first searches provided documents files find relevant context. relevant context combined provided examples question create prompt completion. Related guide: Question answering.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_answer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create answer — create_answer","text":"","code":"if (FALSE) { create_answer(     search_model = \"ada\",     model = \"curie\",     question = \"How many red apples do I have?\",     documents = c(\"I have five green apples.\", \"I love oranges.\"),     examples_context = \"Jack has three brothers and one sister. His sister is sad\",     examples = list(         c(\"How many siblings has Jack?\", \"Three\"),         c(\"Who is sad?\", \"Jack's sister is.\")     ),     max_tokens = 5,     stop = c(\"\\n\", \"<|endoftext|>\"), ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Create classification — create_classification","title":"Create classification — create_classification","text":"Note: endpoint deprecated removed December 3, 2022. Please see Classifications Transition Guide details. Classifies specified query using provided examples. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create classification — create_classification","text":"","code":"create_classification(   model = c(\"ada\", \"babbage\", \"curie\", \"davinci\"),   query,   examples = NULL,   file = NULL,   labels = NULL,   search_model = c(\"ada\", \"babbage\", \"curie\", \"davinci\"),   temperature = 0,   logprobs = NULL,   max_examples = 200,   logit_bias = NULL,   return_prompt = FALSE,   return_metadata = FALSE,   expand = NULL,   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create classification — create_classification","text":"model required; defaults \"ada\"; length one character vector, one among \"ada\", \"babbage\", \"curie\", \"davinci\". ID engine use completion. query required; length one character vector. Query classified. examples optional; defaults NULL; list. list examples labels, following format: list(c(\"movie interesting.\", \"Positive\"), c(\"quite boring.\", \"Negative\"), ...). label strings normalized capitalized. specify either examples file, . file optional; defaults NULL; length one character vector. ID uploaded file contains training examples. See upload_file() upload file desired format purpose. specify either examples file, . labels optional; defaults NULL; arbitrary length character vector. set categories classified. specified, candidate labels automatically collected examples provide. label strings normalized capitalized. search_model required; defaults ada; length one character vector, one among \"ada\", \"babbage\", \"curie\", \"davinci\". ID engine use create_search(). temperature required; defaults 0; length one numeric vector value 0 2. sampling temperature use. Higher values means model take risks. Try 0.9 creative applications, 0 (argmax sampling) ones well-defined answer. logprobs optional; defaults NULL; length one numeric vector integer value 0 5. Include log probabilities logprobs likely tokens, well chosen tokens. example, logprobs 5, API return list 5 likely tokens. API always return logprob sampled token, may logprobs+1 elements response. maximum value logprobs 5. need , please contact support@openai.com describe use case. logprobs set, completion automatically added expand get logprobs. max_examples required; defaults 200; length one numeric vector integer value greater 0. maximum number examples ranked create_search()() using file. Setting higher value leads improved accuracy increased latency cost. logit_bias optional; defaults NULL; named list. Modify likelihood specified tokens appearing completion. Accepts list maps tokens (specified token ID GPT tokenizer) associated bias value -100 100. can use tokenizer tool (works GPT-2 GPT-3) convert text token IDs. Mathematically, bias added logits generated model prior sampling. exact effect vary per model, values -1 1 decrease increase likelihood selection; values like -100 100 result ban exclusive selection relevant token. example, can pass list(\"50256\" = -100) prevent <|endoftext|> token generated. return_prompt required; defaults FALSE; length one logical vector. set TRUE, returned JSON include \"prompt\" field containing final prompt used request completion. mainly useful debugging purposes. return_metadata required; defaults FALSE; length one logical vector. special boolean flag showing metadata. set TRUE, document entry returned JSON contain \"metadata\" field. flag takes effect file set. expand optional; defaults NULL; list elements among completion file. object name list, provide full information object; otherwise, provide object ID. Currently support completion file objects expansion. user optional; defaults NULL; length one character vector. unique identifier representing end-user, help OpenAI monitor detect abuse. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create classification — create_classification","text":"Returns list, elements contain label supplementary information.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_classification.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create classification — create_classification","text":"Given query set labeled examples, model predict likely label query. Useful drop-replacement ML classification text--label task. Classifies specified query using provided examples. endpoint first searches labeled examples select ones relevant particular query. , relevant examples combined query construct prompt produce final label via completions endpoint. Labeled examples can provided via uploaded file, explicitly listed request using examples parameter quick tests small scale use cases. Related guide: Classification.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_classification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create classification — create_classification","text":"","code":"if (FALSE) { create_classification(     search_model = \"ada\",     model = \"curie\",     examples = list(         c(\"A happy moment\", \"Positive\"),         c(\"I am sad.\", \"Negative\"),         c(\"I am feeling awesome\", \"Positive\")     ),     query = \"I'm ok\",     labels = c(\"Positive\", \"Negative\", \"Neutral\") ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_completion.html","id":null,"dir":"Reference","previous_headings":"","what":"Create completion — create_completion","title":"Create completion — create_completion","text":"Creates new completion provided prompt parameters. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_completion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create completion — create_completion","text":"","code":"create_completion(   engine_id,   prompt = \"<|endoftext|>\",   suffix = NULL,   max_tokens = 16,   temperature = 1,   top_p = 1,   n = 1,   stream = FALSE,   logprobs = NULL,   echo = FALSE,   stop = NULL,   presence_penalty = 0,   frequency_penalty = 0,   best_of = 1,   logit_bias = NULL,   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_completion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create completion — create_completion","text":"engine_id required; length one character vector. ID engine use request. prompt required; defaults \"<|endoftext|>\"; arbitrary length character vector. prompt(s) generate completions , encoded string, array strings, array tokens, array token arrays. Note <|endoftext|> document separator model sees training, prompt specified model generate beginning new document. suffix optional; defaults NULL; length one character vector. suffix comes completion inserted text. max_tokens required; defaults 16; length one numeric vector integer value greater 0. maximum number tokens generate completion. token count prompt plus max_tokens exceed model's context length. models context length 2048 tokens (except newest models, support 4096). temperature required; defaults 1; length one numeric vector value 0 2. sampling temperature use. Higher values means model take risks. Try 0.9 creative applications, 0 (argmax sampling) ones well-defined answer. generally recommend altering (.e., setting value different 1) top_p . top_p required; defaults 1; length one numeric vector value 0 1. alternative sampling temperature, called nucleus sampling, model considers results tokens top_p probability mass. 0.1 means tokens comprising top 10% probability mass considered. generally recommend altering (.e., setting value different 1) temperature . n required; defaults 1; length one numeric vector integer value greater 0. many completions generate prompt. Note: parameter generates many completions, can quickly consume token quota. Use carefully ensure reasonable settings max_tokens stop. stream required; defaults FALSE; length one logical vector. Whether stream back partial progress. set, tokens sent data-server-sent events become available, stream terminated data: [DONE] message. Currently implemented. logprobs optional; defaults NULL; length one numeric vector integer value 0 5. Include log probabilities logprobs likely tokens, well chosen tokens. example, logprobs 5, API return list 5 likely tokens. API always return logprob sampled token, may logprobs+1 elements response. maximum value logprobs 5. need , please contact support@openai.com describe use case. echo required; defaults FALSE; length one logical vector. Echo back prompt addition completion? stop optional; defaults NULL; character vector length one four. 4 sequences API stop generating tokens. returned text contain stop sequence. presence_penalty required; defaults 0; length one numeric vector value -2 2. Positive values penalize new tokens based whether appear text far, increasing model's likelihood talk new topics. frequency_penalty required; defaults 0; length one numeric vector value -2 2. Positive values penalize new tokens based existing frequency text far, decreasing model's likelihood repeat line verbatim. best_of required; defaults 1; length one numeric vector integer value greater 0. Generates best_of completions server-side returns \"best\" (one lowest log probability per token). Results streamed. used n, best_of controls number candidate completions n specifies many return - best_of must greater n. Note: parameter generates many completions, can quickly consume token quota. Use carefully ensure reasonable settings max_tokens stop. logit_bias optional; defaults NULL; named list. Modify likelihood specified tokens appearing completion. Accepts list maps tokens (specified token ID GPT tokenizer) associated bias value -100 100. can use tokenizer tool (works GPT-2 GPT-3) convert text token IDs. Mathematically, bias added logits generated model prior sampling. exact effect vary per model, values -1 1 decrease increase likelihood selection; values like -100 100 result ban exclusive selection relevant token. example, can pass list(\"50256\" = -100) prevent <|endoftext|> token generated. user optional; defaults NULL; length one character vector. unique identifier representing end-user, help OpenAI monitor detect abuse. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_completion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create completion — create_completion","text":"Returns list, elements contain completion(s) supplementary information.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_completion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create completion — create_completion","text":"Given prompt, model return one predicted completions, can also return probabilities alternative tokens position.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_completion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create completion — create_completion","text":"","code":"if (FALSE) { create_completion(     engine = \"text-davinci-002\",     prompt = \"Say this is a test\",     max_tokens = 5 )  logit_bias <- list(     \"11\" = -100,     \"13\" = -100 ) create_completion(     engine_id = \"ada\",     prompt = \"Generate a question and an answer\",     n = 4,     best_of = 4,     logit_bias = logit_bias ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create edit — create_edit","title":"Create edit — create_edit","text":"Creates new edit provided input, instruction, parameters. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create edit — create_edit","text":"","code":"create_edit(   engine_id,   input = \"\\\"\",   instruction,   temperature = 1,   top_p = 1,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create edit — create_edit","text":"engine_id required; length one character vector. ID engine use request. input required; defaults '\"'; length one character vector. input text use starting point edit. instruction required; length one character vector. instruction tells model edit prompt. temperature required; defaults 1; length one numeric vector value 0 2. sampling temperature use. Higher values means model take risks. Try 0.9 creative applications, 0 (argmax sampling) ones well-defined answer. generally recommend altering (.e., setting value different 1) top_p . top_p required; defaults 1; length one numeric vector value 0 1. alternative sampling temperature, called nucleus sampling, model considers results tokens top_p probability mass. 0.1 means tokens comprising top 10\\ recommend altering (.e., setting value different 1) temperature . openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create edit — create_edit","text":"Returns list, elements contain edited version prompt supplementary information.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_edit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create edit — create_edit","text":"Given prompt instruction, model return edited version prompt.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_edit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create edit — create_edit","text":"","code":"if (FALSE) { create_edit(     engine_id = \"text-davinci-edit-001\",     input = \"What day of the wek is it?\",     instruction = \"Fix the spelling mistakes\" ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Create embeddings — create_embedding","title":"Create embeddings — create_embedding","text":"Creates embedding vector representing input text. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create embeddings — create_embedding","text":"","code":"create_embedding(   engine_id,   input,   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create embeddings — create_embedding","text":"engine_id required; length one character vector. ID engine use request. input required; arbitrary length character vector. Input text get embeddings , encoded string array tokens. get embeddings multiple inputs single request, pass array strings array token arrays. input must exceed 2048 tokens length. Unless embedding code, suggest replacing newlines (\\\\n) input single space, observed inferior results newlines present. user optional; defaults NULL; length one character vector. unique identifier representing end-user, help OpenAI monitor detect abuse. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create embeddings — create_embedding","text":"Returns list, element contains embedding vector(s) given input.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_embedding.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create embeddings — create_embedding","text":"Get vector representation given input can easily consumed machine learning models algorithms. Related guide: Embeddings.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create embeddings — create_embedding","text":"","code":"if (FALSE) { create_embedding(     engine_id = \"text-similarity-babbage-001\",     input = c(         \"Ah, it is so boring to write documentation\",         \"But examples are really crucial\"     ) ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_fine_tune.html","id":null,"dir":"Reference","previous_headings":"","what":"Create fine-tune — create_fine_tune","title":"Create fine-tune — create_fine_tune","text":"Creates job fine-tunes specified model given dataset. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_fine_tune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create fine-tune — create_fine_tune","text":"","code":"create_fine_tune(   training_file,   validation_file = NULL,   model = c(\"curie\", \"ada\", \"babbage\", \"davinci\"),   n_epochs = 4,   batch_size = NULL,   learning_rate_multiplier = NULL,   prompt_loss_weight = 0.1,   compute_classification_metrics = FALSE,   classification_n_classes = NULL,   classification_positive_class = NULL,   classification_betas = NULL,   suffix = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_fine_tune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create fine-tune — create_fine_tune","text":"training_file required; length one character vector. ID uploaded file contains training data. See upload_file() upload file. dataset must formatted JSONL file, training example JSON object keys \"prompt\" \"completion\". Additionally, must upload file purpose fine-tune. See fine-tuning guide details. validation_file optional; defaults NULL; length one character vector. ID uploaded file contains validation data. provide file, data used generate validation metrics periodically fine-tuning. metrics can viewed fine-tuning results file. train validation data mutually exclusive. dataset must formatted JSONL file, validation example JSON object keys \"prompt\" \"completion\". Additionally, must upload file purpose fine-tune. See fine-tuning guide details. model model required; defaults \"curie\"; length one character vector, one among \"ada\", \"babbage\", \"curie\", \"davinci\". name base model fine-tune. learn models, see Engines documentation. n_epochs required; defaults 4; length one numeric vector integer value greater 0. number epochs train model . epoch refers one full cycle training dataset. batch_size optional; defaults NULL; length one numeric vector integer value greater 0. batch size use training. batch size number training examples used train single forward backward pass. default, batch size dynamically configured ~0.2% number examples training set, capped 256 - general, found larger batch sizes tend work better larger datasets. learning_rate_multiplier optional; defaults NULL; length one numeric vector value greater 0. learning rate multiplier use training. fine-tuning learning rate original learning rate used pretraining multiplied value. default, learning rate multiplier 0.05, 0.1, 0.2 depending final batch_size (larger learning rates tend perform better larger batch sizes). recommend experimenting values range 0.02 0.2 see produces best results. prompt_loss_weight required; defaults 0.1; length one numeric vector. weight use loss prompt tokens. controls much model tries learn generate prompt (compared completion always weight 1.0), can add stabilizing effect training completions short. prompts extremely long (relative completions), may make sense reduce weight avoid -prioritizing learning prompt. compute_classification_metrics required; defaults FLASE; length one logical vector. set, calculate classification-specific metrics accuracy F-1 score using validation set end every epoch. metrics can viewed results file. order compute classification metrics, must provide validation_file. Additionally, must specify classification_n_classes multiclass classification classification_positive_class binary classification. classification_n_classes optional; defaults NULL; length one numeric vector value greater 0. number classes classification task. parameter required multiclass classification. classification_positive_class optional; defaults NULL; length one character vector. positive class binary classification. parameter needed generate precision, recall, F1 metrics binary classification. classification_betas optional; defaults NULL; list elements numeric values greater 0. provided, calculate F-beta scores specified beta values. F-beta score generalization F-1 score. used binary classification. beta 1 (.e. F-1 score), precision recall given weight. larger beta score puts weight recall less precision. smaller beta score puts weight precision less recall. suffix optional; defaults NULL; length one character vector. string 40 characters added fine-tuned model name. example, suffix \"custom-model-name\" produce model name like ada:ft--org:custom-model-name-2022-02-15-04-21-04.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_fine_tune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create fine-tune — create_fine_tune","text":"Returns list, elements contain information fine-tune.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_fine_tune.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create fine-tune — create_fine_tune","text":"Manage fine-tuning jobs tailor model specific training data. Creates job fine-tunes specified model given dataset. Response includes details enqueued job including job status name fine-tuned models complete. Related guide: Fine-tune models.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/create_fine_tune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create fine-tune — create_fine_tune","text":"","code":"if (FALSE) { training_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" ) validation_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" )  training_info <- upload_file(training_file, \"fine-tune\") validation_info <- upload_file(validation_file, \"fine-tune\")  info <- create_fine_tune(     training_file = training_info$id,     validation_file = validation_info$id,     model = \"ada\",     compute_classification_metrics = TRUE,     classification_positive_class = \" baseball\" # Mind space in front ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Create search — create_search","title":"Create search — create_search","text":"Note: endpoint deprecated removed December 3, 2022. Please see Search Transition Guide details. Computes similarity scores provided query documents. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create search — create_search","text":"","code":"create_search(   engine_id = c(\"ada\", \"babbage\", \"curie\", \"davinci\"),   query,   documents = NULL,   file = NULL,   max_rerank = 200,   return_metadata = FALSE,   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create search — create_search","text":"engine_id required; defaults \"ada\"; length one character vector, one among \"ada\", \"babbage\", \"curie\", \"davinci\". ID engine use request. query required; length one character vector. Query search documents. documents optional; defaults NULL; arbitrary length character vector. 200 documents search . maximum document length (tokens) 2034 minus number tokens query. specify either documents file, . file optional; defaults NULL; length one character vector. ID uploaded file contains documents search . specify either documents file, . max_rerank required; defaults 200; length one numeric vector integer value greater 0. maximum number documents re-ranked returned search. flag takes effect file set. return_metadata required; defaults FALSE; length one logical vector. special boolean flag showing metadata. set TRUE, document entry returned JSON contain \"metadata\" field. flag takes effect file set. user optional; defaults NULL; length one character vector. unique identifier representing end-user, help OpenAI monitor detect abuse. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create search — create_search","text":"Returns list, elements contain score document supplementary information.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create search — create_search","text":"Given query set documents labels, model ranks document based semantic similarity provided query. search endpoint computes similarity scores provided query documents. Documents can passed directly API 200 . go beyond 200 document limit, documents can processed offline used efficient retrieval query time. file set, search endpoint searches documents given file returns max_rerank number documents. documents returned along search scores. similarity score positive score usually ranges 0 300 (can sometimes go higher), score 200 usually means document semantically similar query. Related guide: Search.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create search — create_search","text":"","code":"if (FALSE) { create_search(     documents = c(\"White House\", \"hospital\", \"school\"),     query = \"the president\" ) }"},{"path":"https://irudnyts.github.io/openai/reference/delete_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete file — delete_file","title":"Delete file — delete_file","text":"Delete file. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/delete_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete file — delete_file","text":"","code":"delete_file(   file_id,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/delete_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete file — delete_file","text":"file_id required; length one character vector. ID file use request. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/delete_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete file — delete_file","text":"Returns list, elements contains ID deleted file status whether file deleted.","code":""},{"path":"https://irudnyts.github.io/openai/reference/delete_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete file — delete_file","text":"Files used upload documents can used across features like Answers, Search, Classifications.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/delete_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete file — delete_file","text":"","code":"if (FALSE) { file <- system.file(\"extdata\", \"classification-file.jsonl\", package = \"openai\") file_info <- upload_file(file = file, purpose = \"classification\") delete_file(file_info$id) }"},{"path":"https://irudnyts.github.io/openai/reference/delete_fine_tune_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete fine_tune model — delete_fine_tune_model","title":"Delete fine_tune model — delete_fine_tune_model","text":"Delete fine-tuned model. must Owner role organization. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/delete_fine_tune_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete fine_tune model — delete_fine_tune_model","text":"","code":"delete_fine_tune_model(   model,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/delete_fine_tune_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete fine_tune model — delete_fine_tune_model","text":"model required; length one character vector. model delete. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/delete_fine_tune_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete fine_tune model — delete_fine_tune_model","text":"Returns list, elements contains information deleted model.","code":""},{"path":"https://irudnyts.github.io/openai/reference/delete_fine_tune_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete fine_tune model — delete_fine_tune_model","text":"Manage fine-tuning jobs tailor model specific training data. Related guide: Fine-tune models.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/delete_fine_tune_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete fine_tune model — delete_fine_tune_model","text":"","code":"if (FALSE) { fine_tunes <- list_fine_tunes()  fine_tunes <- fine_tunes$data  id <- fine_tunes[!is.na(fine_tunes[, \"fine_tuned_model\"]), \"fine_tuned_model\"]  delete_fine_tune_model(model = id[1]) }"},{"path":"https://irudnyts.github.io/openai/reference/list_engines.html","id":null,"dir":"Reference","previous_headings":"","what":"List engines — list_engines","title":"List engines — list_engines","text":"Lists currently available engines, provides basic information one owner availability. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_engines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List engines — list_engines","text":"","code":"list_engines(   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/list_engines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List engines — list_engines","text":"openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_engines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List engines — list_engines","text":"Returns list, element data frame containing information engines.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_engines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List engines — list_engines","text":"Engines describe provide access various models available API. can refer Engines documentation understand engines available differences .","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/list_engines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List engines — list_engines","text":"","code":"if (FALSE) { list_engines() }"},{"path":"https://irudnyts.github.io/openai/reference/list_files.html","id":null,"dir":"Reference","previous_headings":"","what":"List files — list_files","title":"List files — list_files","text":"Returns list files belong user's organization. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List files — list_files","text":"","code":"list_files(   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/list_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List files — list_files","text":"openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List files — list_files","text":"Returns list, element data frame containing information files.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List files — list_files","text":"Files used upload documents can used across features like Answers, Search, Classifications.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/list_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List files — list_files","text":"","code":"if (FALSE) { list_files() }"},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tune_events.html","id":null,"dir":"Reference","previous_headings":"","what":"List fine-tune events — list_fine_tune_events","title":"List fine-tune events — list_fine_tune_events","text":"Get fine-grained status updates fine-tune job. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tune_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List fine-tune events — list_fine_tune_events","text":"","code":"list_fine_tune_events(   fine_tune_id,   stream = FALSE,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tune_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List fine-tune events — list_fine_tune_events","text":"fine_tune_id required; length one character vector. ID fine-tune job. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tune_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List fine-tune events — list_fine_tune_events","text":"Returns list, elements contains information fine-tune events.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tune_events.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List fine-tune events — list_fine_tune_events","text":"Manage fine-tuning jobs tailor model specific training data. Related guide: Fine-tune models.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tune_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List fine-tune events — list_fine_tune_events","text":"","code":"if (FALSE) { training_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" ) validation_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" )  training_info <- upload_file(training_file, \"fine-tune\") validation_info <- upload_file(validation_file, \"fine-tune\")  info <- create_fine_tune(     training_file = training_info$id,     validation_file = validation_info$id,     model = \"ada\",     compute_classification_metrics = TRUE,     classification_positive_class = \" baseball\" # Mind space in front )  id <- ifelse(     length(info$data$id) > 1,     info$data$id[length(info$data$id)],     info$data$id )  list_fine_tune_events(fine_tune_id = id) }"},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tunes.html","id":null,"dir":"Reference","previous_headings":"","what":"Lists fine-tunes — list_fine_tunes","title":"Lists fine-tunes — list_fine_tunes","text":"List organization's fine-tuning jobs. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tunes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lists fine-tunes — list_fine_tunes","text":"","code":"list_fine_tunes(   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tunes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lists fine-tunes — list_fine_tunes","text":"openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tunes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lists fine-tunes — list_fine_tunes","text":"Returns list, element data frame containing information fine-tunes.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tunes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lists fine-tunes — list_fine_tunes","text":"Manage fine-tuning jobs tailor model specific training data. Related guide: Fine-tune models.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tunes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lists fine-tunes — list_fine_tunes","text":"","code":"if (FALSE) { list_fine_tunes() }"},{"path":"https://irudnyts.github.io/openai/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://irudnyts.github.io/openai/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://irudnyts.github.io/openai/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_engine.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve engine — retrieve_engine","title":"Retrieve engine — retrieve_engine","text":"Retrieves engine instance, providing basic information engine owner availability. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_engine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve engine — retrieve_engine","text":"","code":"retrieve_engine(   engine_id,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_engine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve engine — retrieve_engine","text":"engine_id required; length one character vector. ID engine use request. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_engine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve engine — retrieve_engine","text":"Returns list, elements contain information engine.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_engine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve engine — retrieve_engine","text":"Engines describe provide access various models available API. can refer Engines documentation understand engines available differences .","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/retrieve_engine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve engine — retrieve_engine","text":"","code":"if (FALSE) { retrieve_engine(\"text-davinci-002\") }"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve file — retrieve_file","title":"Retrieve file — retrieve_file","text":"Returns information specific file. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve file — retrieve_file","text":"","code":"retrieve_file(   file_id,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve file — retrieve_file","text":"file_id required; length one character vector. ID file use request. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve file — retrieve_file","text":"Returns list, elements contains information file.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve file — retrieve_file","text":"Files used upload documents can used across features like Answers, Search, Classifications.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve file — retrieve_file","text":"","code":"if (FALSE) { file <- system.file(\"extdata\", \"classification-file.jsonl\", package = \"openai\") file_info <- upload_file(file = file, purpose = \"classification\") retrieve_file(file_info$id) }"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve file content — retrieve_file_content","title":"Retrieve file content — retrieve_file_content","text":"Returns contents specified file. See page details. Please note output files allowed downloaded, input ones.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve file content — retrieve_file_content","text":"","code":"retrieve_file_content(   file_id,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve file content — retrieve_file_content","text":"file_id required; length one character vector. ID file use request. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve file content — retrieve_file_content","text":"Returns list, element contains content file.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file_content.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve file content — retrieve_file_content","text":"Files used upload documents can used across features like Answers, Search, Classifications.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/retrieve_fine_tune.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve fine-tune — retrieve_fine_tune","title":"Retrieve fine-tune — retrieve_fine_tune","text":"Gets info fine-tune job. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_fine_tune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve fine-tune — retrieve_fine_tune","text":"","code":"retrieve_fine_tune(   fine_tune_id,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_fine_tune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve fine-tune — retrieve_fine_tune","text":"fine_tune_id required; length one character vector. ID fine-tune job. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_fine_tune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve fine-tune — retrieve_fine_tune","text":"Returns list, elements contains information fine-tune.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_fine_tune.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve fine-tune — retrieve_fine_tune","text":"Manage fine-tuning jobs tailor model specific training data. Related guide: Fine-tune models.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/retrieve_fine_tune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve fine-tune — retrieve_fine_tune","text":"","code":"if (FALSE) { training_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" ) validation_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" )  training_info <- upload_file(training_file, \"fine-tune\") validation_info <- upload_file(validation_file, \"fine-tune\")  info <- create_fine_tune(     training_file = training_info$id,     validation_file = validation_info$id,     model = \"ada\",     compute_classification_metrics = TRUE,     classification_positive_class = \" baseball\" # Mind space in front )  id <- ifelse(     length(info$data$id) > 1,     info$data$id[length(info$data$id)],     info$data$id )  retrieve_fine_tune(fine_tune_id = id) }"},{"path":"https://irudnyts.github.io/openai/reference/upload_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload file — upload_file","title":"Upload file — upload_file","text":"Upload file contains document(s) used across various endpoints/features. Currently, size files uploaded one organization can 1 GB. Please contact us need increase storage limit. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/upload_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload file — upload_file","text":"","code":"upload_file(   file,   purpose = c(\"search\", \"answers\", \"classifications\", \"fine-tune\"),   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/upload_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload file — upload_file","text":"file required; length one character vector. Name JSON Lines file uploaded. purpose set \"search\" \"answers\", line JSON record \"text\" field optional \"metadata\" field. \"text\" field used search. Specially, purpose \"answers\", \"\\n\" used delimiter chunk contents \"text\" field multiple documents finer-grained matching. purpose set \"classifications\", line JSON record representing single training example \"text\" \"label\" fields along optional \"metadata\" field. purpose set \"fine-tune\", line JSON record \"prompt\" \"completion\" fields representing training examples. purpose required; defaults \"search\"; length one character vector, one among \"search\", \"answers\", \"classifications\", \"fine-tune\". intended purpose uploaded documents. allows us validate format uploaded file. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/upload_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload file — upload_file","text":"Returns list, elements contains ID uploaded file supplementary information.","code":""},{"path":"https://irudnyts.github.io/openai/reference/upload_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload file — upload_file","text":"Files used upload documents can used across features like Answers, Search, Classifications.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/upload_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload file — upload_file","text":"","code":"if (FALSE) { file <- system.file(\"extdata\", \"classification-file.jsonl\", package = \"openai\") upload_file(file = file, purpose = \"classification\") }"}]
