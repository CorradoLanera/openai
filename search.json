[{"path":"https://irudnyts.github.io/openai/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 openai authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://irudnyts.github.io/openai/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Iegor Rudnytskyi. Author, maintainer.","code":""},{"path":"https://irudnyts.github.io/openai/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rudnytskyi (2022). openai: R Wrapper OpenAI API. https://github.com/irudnyts/openai, https://irudnyts.github.io/openai/.","code":"@Manual{,   title = {openai: R Wrapper for OpenAI API},   author = {Iegor Rudnytskyi},   year = {2022},   note = {https://github.com/irudnyts/openai, https://irudnyts.github.io/openai/}, }"},{"path":[]},{"path":"https://irudnyts.github.io/openai/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"R Wrapper for OpenAI API","text":"openai R wrapper OpenAI API endpoints. package covers Engines, Completions, Edits, Files, Fine-tunes, Embeddings legacy Searches, Classifications, Answers endpoints (removed December 3, 2022).","code":""},{"path":"https://irudnyts.github.io/openai/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Wrapper for OpenAI API","text":"easiest way install openai CRAN use “official” install.packages() function: can also install development version openai GitHub :","code":"install.packages(\"openai\") if (!require(remotes))     install.packages(\"remotes\") remotes::install_github(\"irudnyts/openai\")"},{"path":"https://irudnyts.github.io/openai/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"R Wrapper for OpenAI API","text":"use OpenAI API, need provide API key. First, sign OpenAI API page. signed logged , need open page, click Personal, select View API keys drop-menu. can copy key clicking green text Copy. default, functions openai look OPENAI_API_KEY environment variable. want set global environment variable, can use following command (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx replaced actual key): Otherwise, can add key .Renviron file project. following commands open .Renviron editing: can add following line file (, replace xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx actual key): Note: using GitHub/Gitlab, forget add .Renviron .gitignore! Finally, can always provide key manually functions package.","code":"Sys.setenv(     OPENAI_API_KEY = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' ) if (!require(usethis))     install.packages(\"usethis\")  usethis::edit_r_environ(scope = \"project\") OPENAI_API_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"},{"path":"https://irudnyts.github.io/openai/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"R Wrapper for OpenAI API","text":"Functions openai self-explanatory names. example, create completion, one can use create_completion() function: , one can generate image using DALL·E text--image model create_image():","code":"library(openai)  create_completion(     engine_id = \"ada\",     prompt = \"Generate a question and an answer\" ) #> $id #> [1] \"cmpl-6KBvXTHhhTv2VtgPMZQPBaNcJKWqi\" #>  #> $object #> [1] \"text_completion\" #>  #> $created #> [1] 1670270427 #>  #> $model #> [1] \"ada\" #>  #> $choices #>                                                                      text index #> 1  for Purchase of the product (any time you click on View It here, there     0 #>   logprobs finish_reason #> 1       NA        length #>  #> $usage #> $usage$prompt_tokens #> [1] 7 #>  #> $usage$completion_tokens #> [1] 16 #>  #> $usage$total_tokens #> [1] 23 create_image(\"An astronaut riding a horse in a photorealistic style\")"},{"path":"https://irudnyts.github.io/openai/reference/cancel_fine_tune.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancel fine-tune — cancel_fine_tune","title":"Cancel fine-tune — cancel_fine_tune","text":"Cancel running fine-tune job. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/cancel_fine_tune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancel fine-tune — cancel_fine_tune","text":"","code":"cancel_fine_tune(   fine_tune_id,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/cancel_fine_tune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cancel fine-tune — cancel_fine_tune","text":"fine_tune_id required; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/cancel_fine_tune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cancel fine-tune — cancel_fine_tune","text":"Returns list, elements contains information cancelled fine-tune.","code":""},{"path":"https://irudnyts.github.io/openai/reference/cancel_fine_tune.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cancel fine-tune — cancel_fine_tune","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/cancel_fine_tune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancel fine-tune — cancel_fine_tune","text":"","code":"if (FALSE) { training_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" ) validation_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" )  training_info <- upload_file(training_file, \"fine-tune\") validation_info <- upload_file(validation_file, \"fine-tune\")  info <- create_fine_tune(     training_file = training_info$id,     validation_file = validation_info$id,     model = \"ada\",     compute_classification_metrics = TRUE,     classification_positive_class = \" baseball\" # Mind space in front )  id <- ifelse(     length(info$data$id) > 1,     info$data$id[length(info$data$id)],     info$data$id )  cancel_fine_tune(fine_tune_id = id) }"},{"path":"https://irudnyts.github.io/openai/reference/create_answer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create answer — create_answer","title":"Create answer — create_answer","text":"Note: endpoint deprecated removed December 3, 2022. Please see Answers Transition Guide details. Answers specified question based documents examples. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_answer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create answer — create_answer","text":"","code":"create_answer(   model = c(\"ada\", \"babbage\", \"curie\", \"davinci\"),   question,   examples,   examples_context,   documents = NULL,   file = NULL,   search_model = c(\"ada\", \"babbage\", \"curie\", \"davinci\"),   max_rerank = 200,   temperature = 0,   logprobs = NULL,   max_tokens = 16,   stop = NULL,   n = 1,   logit_bias = NULL,   return_metadata = FALSE,   return_prompt = FALSE,   expand = NULL,   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_answer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create answer — create_answer","text":"model required; defaults \"ada\"; length one character vector, one among \"ada\", \"babbage\", \"curie\", \"davinci\". question required; length one character vector. examples required; list. examples_context required; length one character vector. documents optional; defaults NULL; arbitrary length character vector. file optional; defaults NULL; length one character vector. search_model required; defaults ada; length one character vector, one among \"ada\", \"babbage\", \"curie\", \"davinci\". max_rerank required; defaults 200; length one numeric vector integer value greater 0. temperature required; defaults 0; length one numeric vector value 0 2. logprobs optional; defaults NULL; length one numeric vector integer value 0 5. max_tokens required; defaults 16; length one numeric vector integer value greater 0. stop optional; defaults NULL; character vector length one four. n required; defaults 1; length one numeric vector integer value greater 0. logit_bias optional; defaults NULL; named list. return_metadata required; defaults FALSE; length one logical vector. return_prompt required; defaults FALSE; length one logical vector. expand optional; defaults NULL; list elements among completion file. user optional; defaults NULL; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_answer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create answer — create_answer","text":"Returns list, elements contain answer supplementary information.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_answer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create answer — create_answer","text":"arguments description please refer official documentation.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_answer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create answer — create_answer","text":"","code":"if (FALSE) { create_answer(     search_model = \"ada\",     model = \"curie\",     question = \"How many red apples do I have?\",     documents = c(\"I have five green apples.\", \"I love oranges.\"),     examples_context = \"Jack has three brothers and one sister. His sister is sad\",     examples = list(         c(\"How many siblings has Jack?\", \"Three\"),         c(\"Who is sad?\", \"Jack's sister is.\")     ),     max_tokens = 5,     stop = c(\"\\n\", \"<|endoftext|>\"), ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Create classification — create_classification","title":"Create classification — create_classification","text":"Note: endpoint deprecated removed December 3, 2022. Please see Classifications Transition Guide details. Classifies query based provided examples. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create classification — create_classification","text":"","code":"create_classification(   model = c(\"ada\", \"babbage\", \"curie\", \"davinci\"),   query,   examples = NULL,   file = NULL,   labels = NULL,   search_model = c(\"ada\", \"babbage\", \"curie\", \"davinci\"),   temperature = 0,   logprobs = NULL,   max_examples = 200,   logit_bias = NULL,   return_prompt = FALSE,   return_metadata = FALSE,   expand = NULL,   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create classification — create_classification","text":"model required; defaults \"ada\"; length one character vector, one among \"ada\", \"babbage\", \"curie\", \"davinci\". query required; length one character vector. examples optional; defaults NULL; list. list examples labels, following format: list(c(\"movie interesting.\", \"Positive\"), c(\"quite boring.\", \"Negative\"), ...). file optional; defaults NULL; length one character vector. labels optional; defaults NULL; arbitrary length character vector. search_model required; defaults ada; length one character vector, one among \"ada\", \"babbage\", \"curie\", \"davinci\". temperature required; defaults 0; length one numeric vector value 0 2. logprobs optional; defaults NULL; length one numeric vector integer value 0 5. max_examples required; defaults 200; length one numeric vector integer value greater 0. logit_bias optional; defaults NULL; named list. return_prompt required; defaults FALSE; length one logical vector. return_metadata required; defaults FALSE; length one logical vector. expand optional; defaults NULL; list elements among completion file. user optional; defaults NULL; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create classification — create_classification","text":"Returns list, elements contain label supplementary information.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_classification.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create classification — create_classification","text":"arguments description please refer official documentation.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_classification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create classification — create_classification","text":"","code":"if (FALSE) { create_classification(     search_model = \"ada\",     model = \"curie\",     examples = list(         c(\"A happy moment\", \"Positive\"),         c(\"I am sad.\", \"Negative\"),         c(\"I am feeling awesome\", \"Positive\")     ),     query = \"I'm ok\",     labels = c(\"Positive\", \"Negative\", \"Neutral\") ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_completion.html","id":null,"dir":"Reference","previous_headings":"","what":"Create completion — create_completion","title":"Create completion — create_completion","text":"Creates completion based provided prompt parameters. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_completion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create completion — create_completion","text":"","code":"create_completion(   engine_id,   prompt = \"<|endoftext|>\",   suffix = NULL,   max_tokens = 16,   temperature = 1,   top_p = 1,   n = 1,   stream = FALSE,   logprobs = NULL,   echo = FALSE,   stop = NULL,   presence_penalty = 0,   frequency_penalty = 0,   best_of = 1,   logit_bias = NULL,   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_completion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create completion — create_completion","text":"engine_id required; length one character vector. prompt required; defaults \"<|endoftext|>\"; arbitrary length character vector. suffix optional; defaults NULL; length one character vector. max_tokens required; defaults 16; length one numeric vector integer value greater 0. temperature required; defaults 1; length one numeric vector value 0 2. top_p required; defaults 1; length one numeric vector value 0 1. n required; defaults 1; length one numeric vector integer value greater 0. stream required; defaults FALSE; length one logical vector. Currently implemented. logprobs optional; defaults NULL; length one numeric vector integer value 0 5. echo required; defaults FALSE; length one logical vector. stop optional; defaults NULL; character vector length one four. presence_penalty required; defaults 0; length one numeric vector value -2 2. frequency_penalty required; defaults 0; length one numeric vector value -2 2. best_of required; defaults 1; length one numeric vector integer value greater 0. logit_bias optional; defaults NULL; named list. user optional; defaults NULL; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_completion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create completion — create_completion","text":"Returns list, elements contain completion(s) supplementary information.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_completion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create completion — create_completion","text":"arguments description please refer official documentation.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_completion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create completion — create_completion","text":"","code":"if (FALSE) { create_completion(     engine = \"text-davinci-002\",     prompt = \"Say this is a test\",     max_tokens = 5 )  logit_bias <- list(     \"11\" = -100,     \"13\" = -100 ) create_completion(     engine_id = \"ada\",     prompt = \"Generate a question and an answer\",     n = 4,     best_of = 4,     logit_bias = logit_bias ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create edit — create_edit","title":"Create edit — create_edit","text":"Creates edit based provided input, instruction, parameters. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create edit — create_edit","text":"","code":"create_edit(   engine_id,   input = \"\\\"\",   instruction,   temperature = 1,   top_p = 1,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create edit — create_edit","text":"engine_id required; length one character vector. input required; defaults '\"'; length one character vector. instruction required; length one character vector. temperature required; defaults 1; length one numeric vector value 0 2. top_p required; defaults 1; length one numeric vector value 0 1. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create edit — create_edit","text":"Returns list, elements contain edited version prompt supplementary information.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_edit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create edit — create_edit","text":"arguments description please refer official documentation.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_edit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create edit — create_edit","text":"","code":"if (FALSE) { create_edit(     engine_id = \"text-davinci-edit-001\",     input = \"What day of the wek is it?\",     instruction = \"Fix the spelling mistakes\" ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Create embeddings — create_embedding","title":"Create embeddings — create_embedding","text":"Creates embedding vector represents provided input. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create embeddings — create_embedding","text":"","code":"create_embedding(   engine_id,   input,   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create embeddings — create_embedding","text":"engine_id required; length one character vector. input required; arbitrary length character vector. user optional; defaults NULL; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create embeddings — create_embedding","text":"Returns list, element contains embedding vector(s) given input.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_embedding.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create embeddings — create_embedding","text":"arguments description please refer official documentation.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_embedding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create embeddings — create_embedding","text":"","code":"if (FALSE) { create_embedding(     engine_id = \"text-similarity-babbage-001\",     input = c(         \"Ah, it is so boring to write documentation\",         \"But examples are really crucial\"     ) ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_fine_tune.html","id":null,"dir":"Reference","previous_headings":"","what":"Create fine-tune — create_fine_tune","title":"Create fine-tune — create_fine_tune","text":"Creates job fine-tunes specified model based given dataset. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_fine_tune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create fine-tune — create_fine_tune","text":"","code":"create_fine_tune(   training_file,   validation_file = NULL,   model = c(\"curie\", \"ada\", \"babbage\", \"davinci\"),   n_epochs = 4,   batch_size = NULL,   learning_rate_multiplier = NULL,   prompt_loss_weight = 0.1,   compute_classification_metrics = FALSE,   classification_n_classes = NULL,   classification_positive_class = NULL,   classification_betas = NULL,   suffix = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_fine_tune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create fine-tune — create_fine_tune","text":"training_file required; length one character vector. validation_file optional; defaults NULL; length one character vector. model model required; defaults \"curie\"; length one character vector, one among \"ada\", \"babbage\", \"curie\", \"davinci\". n_epochs required; defaults 4; length one numeric vector integer value greater 0. batch_size optional; defaults NULL; length one numeric vector integer value greater 0. learning_rate_multiplier optional; defaults NULL; length one numeric vector value greater 0. prompt_loss_weight required; defaults 0.1; length one numeric vector. compute_classification_metrics required; defaults FLASE; length one logical vector. classification_n_classes optional; defaults NULL; length one numeric vector value greater 0. classification_positive_class optional; defaults NULL; length one character vector. classification_betas optional; defaults NULL; list elements numeric values greater 0. suffix optional; defaults NULL; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_fine_tune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create fine-tune — create_fine_tune","text":"Returns list, elements contain information fine-tune.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_fine_tune.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create fine-tune — create_fine_tune","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/create_fine_tune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create fine-tune — create_fine_tune","text":"","code":"if (FALSE) { training_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" ) validation_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" )  training_info <- upload_file(training_file, \"fine-tune\") validation_info <- upload_file(validation_file, \"fine-tune\")  info <- create_fine_tune(     training_file = training_info$id,     validation_file = validation_info$id,     model = \"ada\",     compute_classification_metrics = TRUE,     classification_positive_class = \" baseball\" # Mind space in front ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Create image — create_image","title":"Create image — create_image","text":"Creates image given prompt. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create image — create_image","text":"","code":"create_image(   prompt,   n = 1,   size = c(\"1024x1024\", \"256x256\", \"512x512\"),   response_format = c(\"url\", \"b64_json\"),   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create image — create_image","text":"prompt required; length one character vector. n required; defaults 1; length one numeric vector integer value greater 0. size required; defaults \"1024x1024\"; length one character vector, one among \"256x256\", \"512x512\", \"1024x1024\". response_format required; defaults \"url\"; length one character vector, one among \"url\" \"b64_json\". user optional; defaults NULL; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create image — create_image","text":"Returns list, element contain either link generated image generated image decoded Base64.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_image.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create image — create_image","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/create_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create image — create_image","text":"","code":"if (FALSE) { create_image(\"An astronaut riding a horse in a photorealistic style\") }"},{"path":"https://irudnyts.github.io/openai/reference/create_image_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create image edit — create_image_edit","title":"Create image edit — create_image_edit","text":"Creates edited extended image given original image prompt. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_image_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create image edit — create_image_edit","text":"","code":"create_image_edit(   image,   mask,   prompt,   n = 1,   size = c(\"1024x1024\", \"256x256\", \"512x512\"),   response_format = c(\"url\", \"b64_json\"),   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_image_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create image edit — create_image_edit","text":"image required; length one character vector. mask required; length one character vector. prompt required; length one character vector. n required; defaults 1; length one numeric vector integer value greater 0. size required; defaults \"1024x1024\"; length one character vector, one among \"256x256\", \"512x512\", \"1024x1024\". response_format required; defaults \"url\"; length one character vector, one among \"url\" \"b64_json\". user optional; defaults NULL; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_image_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create image edit — create_image_edit","text":"Returns list, element contain either link edited image edited image decoded Base64.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_image_edit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create image edit — create_image_edit","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/create_image_edit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create image edit — create_image_edit","text":"","code":"if (FALSE) { image <- system.file(\"extdata\", \"astronaut.png\", package = \"openai\") mask <- system.file(\"extdata\", \"mask.png\", package = \"openai\") create_image_edit(     image = image,     mask = mask,     prompt = \"goat\",     n = 1,     response_format = \"url\" ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_image_variation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create image variation — create_image_variation","title":"Create image variation — create_image_variation","text":"Creates variation given image. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_image_variation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create image variation — create_image_variation","text":"","code":"create_image_variation(   image,   n = 1,   size = c(\"1024x1024\", \"256x256\", \"512x512\"),   response_format = c(\"url\", \"b64_json\"),   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_image_variation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create image variation — create_image_variation","text":"image required; length one character vector. n required; defaults 1; length one numeric vector integer value greater 0. size required; defaults \"1024x1024\"; length one character vector, one among \"256x256\", \"512x512\", \"1024x1024\". response_format required; defaults \"url\"; length one character vector, one among \"url\" \"b64_json\". user optional; defaults NULL; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_image_variation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create image variation — create_image_variation","text":"Returns list, element contain either link image variation image variation decoded Base64.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_image_variation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create image variation — create_image_variation","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/create_image_variation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create image variation — create_image_variation","text":"","code":"if (FALSE) { image <- system.file(\"extdata\", \"astronaut.png\", package = \"openai\") create_image_variation(     image = image,     n = 1,     size = \"256x256\",     response_format = \"url\" ) }"},{"path":"https://irudnyts.github.io/openai/reference/create_moderation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create moderation — create_moderation","title":"Create moderation — create_moderation","text":"Classifies text violates OpenAI's Content Policy. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_moderation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create moderation — create_moderation","text":"","code":"create_moderation(   input,   model = c(\"text-moderation-stable\", \"text-moderation-latest\"),   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_moderation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create moderation — create_moderation","text":"input required; arbitrary length character vector. model required; length one character vector. One among \"text-moderation-stable\" \"text-moderation-latest\". openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_moderation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create moderation — create_moderation","text":"Returns list, elements contain information model.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_moderation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create moderation — create_moderation","text":"arguments description please refer official documentation.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_moderation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create moderation — create_moderation","text":"","code":"if (FALSE) { create_moderation(\"I want to kill them all.\") }"},{"path":"https://irudnyts.github.io/openai/reference/create_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Create search — create_search","title":"Create search — create_search","text":"Note: endpoint deprecated removed December 3, 2022. Please see Search Transition Guide details. Computes similarity scores query provided documents. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create search — create_search","text":"","code":"create_search(   engine_id = c(\"ada\", \"babbage\", \"curie\", \"davinci\"),   query,   documents = NULL,   file = NULL,   max_rerank = 200,   return_metadata = FALSE,   user = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/create_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create search — create_search","text":"engine_id required; defaults \"ada\"; length one character vector, one among \"ada\", \"babbage\", \"curie\", \"davinci\". query required; length one character vector. documents optional; defaults NULL; arbitrary length character vector. file optional; defaults NULL; length one character vector. max_rerank required; defaults 200; length one numeric vector integer value greater 0. return_metadata required; defaults FALSE; length one logical vector. user optional; defaults NULL; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create search — create_search","text":"Returns list, elements contain score document supplementary information.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create search — create_search","text":"arguments description please refer official documentation.","code":""},{"path":"https://irudnyts.github.io/openai/reference/create_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create search — create_search","text":"","code":"if (FALSE) { create_search(     documents = c(\"White House\", \"hospital\", \"school\"),     query = \"the president\" ) }"},{"path":"https://irudnyts.github.io/openai/reference/delete_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete file — delete_file","title":"Delete file — delete_file","text":"Deletes file. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/delete_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete file — delete_file","text":"","code":"delete_file(   file_id,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/delete_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete file — delete_file","text":"file_id required; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/delete_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete file — delete_file","text":"Returns list, elements contains ID deleted file status whether file deleted.","code":""},{"path":"https://irudnyts.github.io/openai/reference/delete_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete file — delete_file","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/delete_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete file — delete_file","text":"","code":"if (FALSE) { file <- system.file(\"extdata\", \"classification-file.jsonl\", package = \"openai\") file_info <- upload_file(file = file, purpose = \"classification\") delete_file(file_info$id) }"},{"path":"https://irudnyts.github.io/openai/reference/delete_fine_tune_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete fine_tune model — delete_fine_tune_model","title":"Delete fine_tune model — delete_fine_tune_model","text":"Deletes fine-tuned model. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/delete_fine_tune_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete fine_tune model — delete_fine_tune_model","text":"","code":"delete_fine_tune_model(   model,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/delete_fine_tune_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete fine_tune model — delete_fine_tune_model","text":"model required; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/delete_fine_tune_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete fine_tune model — delete_fine_tune_model","text":"Returns list, elements contains information deleted model.","code":""},{"path":"https://irudnyts.github.io/openai/reference/delete_fine_tune_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delete fine_tune model — delete_fine_tune_model","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/delete_fine_tune_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete fine_tune model — delete_fine_tune_model","text":"","code":"if (FALSE) { fine_tunes <- list_fine_tunes()  fine_tunes <- fine_tunes$data  id <- fine_tunes[!is.na(fine_tunes[, \"fine_tuned_model\"]), \"fine_tuned_model\"]  delete_fine_tune_model(model = id[1]) }"},{"path":"https://irudnyts.github.io/openai/reference/list_engines.html","id":null,"dir":"Reference","previous_headings":"","what":"List engines — list_engines","title":"List engines — list_engines","text":"Lists available engines provides basic information engines. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_engines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List engines — list_engines","text":"","code":"list_engines(   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/list_engines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List engines — list_engines","text":"openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_engines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List engines — list_engines","text":"Returns list, element data frame containing information engines.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_engines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List engines — list_engines","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/list_engines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List engines — list_engines","text":"","code":"if (FALSE) { list_engines() }"},{"path":"https://irudnyts.github.io/openai/reference/list_files.html","id":null,"dir":"Reference","previous_headings":"","what":"List files — list_files","title":"List files — list_files","text":"Lists files uploaded user's organization. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List files — list_files","text":"","code":"list_files(   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/list_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List files — list_files","text":"openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List files — list_files","text":"Returns list, element data frame containing information files.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List files — list_files","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/list_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List files — list_files","text":"","code":"if (FALSE) { list_files() }"},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tune_events.html","id":null,"dir":"Reference","previous_headings":"","what":"List fine-tune events — list_fine_tune_events","title":"List fine-tune events — list_fine_tune_events","text":"Returns events related specified fine-tune job. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tune_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List fine-tune events — list_fine_tune_events","text":"","code":"list_fine_tune_events(   fine_tune_id,   stream = FALSE,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tune_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List fine-tune events — list_fine_tune_events","text":"fine_tune_id required; length one character vector. stream required; defaults FALSE; length one logical vector. Currently implemented. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tune_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List fine-tune events — list_fine_tune_events","text":"Returns list, elements contains information fine-tune events.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tune_events.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List fine-tune events — list_fine_tune_events","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tune_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List fine-tune events — list_fine_tune_events","text":"","code":"if (FALSE) { training_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" ) validation_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" )  training_info <- upload_file(training_file, \"fine-tune\") validation_info <- upload_file(validation_file, \"fine-tune\")  info <- create_fine_tune(     training_file = training_info$id,     validation_file = validation_info$id,     model = \"ada\",     compute_classification_metrics = TRUE,     classification_positive_class = \" baseball\" # Mind space in front )  id <- ifelse(     length(info$data$id) > 1,     info$data$id[length(info$data$id)],     info$data$id )  list_fine_tune_events(fine_tune_id = id) }"},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tunes.html","id":null,"dir":"Reference","previous_headings":"","what":"Lists fine-tunes — list_fine_tunes","title":"Lists fine-tunes — list_fine_tunes","text":"Lists organization's fine-tuning jobs. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tunes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lists fine-tunes — list_fine_tunes","text":"","code":"list_fine_tunes(   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tunes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lists fine-tunes — list_fine_tunes","text":"openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tunes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lists fine-tunes — list_fine_tunes","text":"Returns list, element data frame containing information fine-tunes.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tunes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lists fine-tunes — list_fine_tunes","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/list_fine_tunes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lists fine-tunes — list_fine_tunes","text":"","code":"if (FALSE) { list_fine_tunes() }"},{"path":"https://irudnyts.github.io/openai/reference/list_models.html","id":null,"dir":"Reference","previous_headings":"","what":"List models — list_models","title":"List models — list_models","text":"Lists currently available models, provides basic information one owner availability. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List models — list_models","text":"","code":"list_models(   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/list_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List models — list_models","text":"openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List models — list_models","text":"Returns list, element data frame containing information models.","code":""},{"path":"https://irudnyts.github.io/openai/reference/list_models.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List models — list_models","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/list_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List models — list_models","text":"","code":"if (FALSE) { list_models() }"},{"path":"https://irudnyts.github.io/openai/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://irudnyts.github.io/openai/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://irudnyts.github.io/openai/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_engine.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve engine — retrieve_engine","title":"Retrieve engine — retrieve_engine","text":"Provides information specified engine. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_engine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve engine — retrieve_engine","text":"","code":"retrieve_engine(   engine_id,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_engine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve engine — retrieve_engine","text":"engine_id required; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_engine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve engine — retrieve_engine","text":"Returns list, elements contain information engine.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_engine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve engine — retrieve_engine","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/retrieve_engine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve engine — retrieve_engine","text":"","code":"if (FALSE) { retrieve_engine(\"text-davinci-002\") }"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve file — retrieve_file","title":"Retrieve file — retrieve_file","text":"Provides information specific file. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve file — retrieve_file","text":"","code":"retrieve_file(   file_id,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve file — retrieve_file","text":"file_id required; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve file — retrieve_file","text":"Returns list, elements contains information file.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve file — retrieve_file","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve file — retrieve_file","text":"","code":"if (FALSE) { file <- system.file(\"extdata\", \"classification-file.jsonl\", package = \"openai\") file_info <- upload_file(file = file, purpose = \"classification\") retrieve_file(file_info$id) }"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve file content — retrieve_file_content","title":"Retrieve file content — retrieve_file_content","text":"Returns content specified file. See page details. Please note output files allowed downloaded, input ones.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve file content — retrieve_file_content","text":"","code":"retrieve_file_content(   file_id,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve file content — retrieve_file_content","text":"file_id required; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve file content — retrieve_file_content","text":"Returns list, element contains content file.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_file_content.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve file content — retrieve_file_content","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/retrieve_fine_tune.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve fine-tune — retrieve_fine_tune","title":"Retrieve fine-tune — retrieve_fine_tune","text":"Returns information specified fine-tune job. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_fine_tune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve fine-tune — retrieve_fine_tune","text":"","code":"retrieve_fine_tune(   fine_tune_id,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_fine_tune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve fine-tune — retrieve_fine_tune","text":"fine_tune_id required; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_fine_tune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve fine-tune — retrieve_fine_tune","text":"Returns list, elements contains information fine-tune.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_fine_tune.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve fine-tune — retrieve_fine_tune","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/retrieve_fine_tune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve fine-tune — retrieve_fine_tune","text":"","code":"if (FALSE) { training_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" ) validation_file <- system.file(     \"extdata\", \"sport_prepared_train.jsonl\", package = \"openai\" )  training_info <- upload_file(training_file, \"fine-tune\") validation_info <- upload_file(validation_file, \"fine-tune\")  info <- create_fine_tune(     training_file = training_info$id,     validation_file = validation_info$id,     model = \"ada\",     compute_classification_metrics = TRUE,     classification_positive_class = \" baseball\" # Mind space in front )  id <- ifelse(     length(info$data$id) > 1,     info$data$id[length(info$data$id)],     info$data$id )  retrieve_fine_tune(fine_tune_id = id) }"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve model — retrieve_model","title":"Retrieve model — retrieve_model","text":"Retrieves model instance, providing basic information model owner permissioning. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve model — retrieve_model","text":"","code":"retrieve_model(   model,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/retrieve_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve model — retrieve_model","text":"model required; length one character vector. openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve model — retrieve_model","text":"Returns list, elements contain information model.","code":""},{"path":"https://irudnyts.github.io/openai/reference/retrieve_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve model — retrieve_model","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/retrieve_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve model — retrieve_model","text":"","code":"if (FALSE) { retrieve_model(\"text-davinci-002\") }"},{"path":"https://irudnyts.github.io/openai/reference/upload_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload file — upload_file","title":"Upload file — upload_file","text":"Uploads file used various purposes. size storage limited 1 Gb. See page details.","code":""},{"path":"https://irudnyts.github.io/openai/reference/upload_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload file — upload_file","text":"","code":"upload_file(   file,   purpose = c(\"search\", \"answers\", \"classifications\", \"fine-tune\"),   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   openai_organization = NULL )"},{"path":"https://irudnyts.github.io/openai/reference/upload_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload file — upload_file","text":"file required; length one character vector. purpose required; defaults \"search\"; length one character vector, one among \"search\", \"answers\", \"classifications\", \"fine-tune\". openai_api_key required; defaults Sys.getenv(\"OPENAI_API_KEY\") (.e., value retrieved .Renviron file); length one character vector. Specifies OpenAI API key. openai_organization optional; defaults NULL; length one character vector. Specifies OpenAI organization.","code":""},{"path":"https://irudnyts.github.io/openai/reference/upload_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload file — upload_file","text":"Returns list, elements contains ID uploaded file supplementary information.","code":""},{"path":"https://irudnyts.github.io/openai/reference/upload_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload file — upload_file","text":"arguments description please refer official documentation.","code":""},{"path":[]},{"path":"https://irudnyts.github.io/openai/reference/upload_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload file — upload_file","text":"","code":"if (FALSE) { file <- system.file(\"extdata\", \"classification-file.jsonl\", package = \"openai\") upload_file(file = file, purpose = \"classification\") }"},{"path":"https://irudnyts.github.io/openai/news/index.html","id":"openai-020","dir":"Changelog","previous_headings":"","what":"openai 0.2.0","title":"openai 0.2.0","text":"CRAN release: 2022-12-04 Add new DALL-E functions, namely create_image(), create_image_edit(), create_image_variation() Add new function create_moderation() checks whether input violates OpenAI’s Content Policy Add new model-related functions, namely list_models() retrieve_model()","code":""},{"path":"https://irudnyts.github.io/openai/news/index.html","id":"openai-010","dir":"Changelog","previous_headings":"","what":"openai 0.1.0","title":"openai 0.1.0","text":"CRAN release: 2022-06-07 Initial version","code":""}]
